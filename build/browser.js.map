{"version":3,"file":"browser.js","sources":["../src/CharStream.js","../src/Result.js","../src/Parser.js","../src/main.js"],"sourcesContent":["export default class CharStream {\r\n    constructor(data, cursor, row, column) {\r\n        this.data = data;\r\n        this.cursor = cursor;\r\n        this.row = row;\r\n        this.column = column;\r\n        Object.freeze(this);\r\n    }\r\n\r\n    advance() {\r\n        const char = this.data[this.cursor];\r\n        const newStream =\r\n            char === '\\n'\r\n            ? new CharStream(this.data, this.cursor + 1, this.row + 1, 1)\r\n            : new CharStream(this.data, this.cursor + 1, this.row, this.column + 1);\r\n        return { char: char, stream: newStream };\r\n    }\r\n\r\n    static FromString(string) {\r\n        return new CharStream(string, 0, 1, 1);\r\n    }\r\n}","export class Result {\r\n    constructor(stream) {\r\n        this.stream = stream;\r\n    }\r\n    map(_) { throw undefined; }\r\n    bind(_) { throw undefined; }\r\n}\r\n\r\nexport class Success extends Result {\r\n    constructor(value, stream) {\r\n        super(stream);\r\n        this.value = value;\r\n        Object.freeze(this);\r\n    }\r\n    map(f) {\r\n        const [value, stream] = f(this.value, this.stream);\r\n        return new Success(value, stream);\r\n    }\r\n    bind(f) {\r\n        return f(this.value, this.stream);\r\n    }\r\n}\r\n\r\nexport class Failure extends Result {\r\n    constructor(message, stream) {\r\n        super(stream);\r\n        this.message = message;\r\n        Object.freeze(this);\r\n    }\r\n    map(_) {\r\n        return this;\r\n    }\r\n    bind(_) {\r\n        return this;\r\n    }\r\n}","import { Success, Failure } from \"./Result\";\r\n\r\nconst position = stream => new Success([stream.row, stream.column], stream);\r\n\r\nconst lazy = f => stream => f () (stream);\r\n\r\nconst return_ = x => stream => new Success(x, stream);\r\n\r\nconst fail = message => stream =>\r\n    new Failure(message, stream);\r\n\r\nconst bind = parser => f => stream => \r\n    parser (stream).bind((value, stream) => f (value) (stream));\r\n\r\nconst map = parser => f =>\r\n    bind (parser)\r\n        (x => return_ (f (x)));\r\n\r\nconst optional = parser => stream => {\r\n    const result = parser (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success(undefined, stream);\r\n    } else {\r\n        return result;\r\n    }\r\n}\r\n\r\nconst pipe = ([head, ...tail]) =>\r\n    head === undefined ?\r\n        return_ ([]) :\r\n        bind\r\n            (head)\r\n            (h => map\r\n                (pipe (tail))\r\n                (t => [h].concat(t)));\r\n\r\nconst ignore = ([head, ...tail]) => \r\n    head === undefined ?\r\n        return_ (undefined) :\r\n        bind (head) (_ => ignore (tail));\r\n\r\nconst do_ = ({first = [], apply, then = []}) => \r\n    bind\r\n        (ignore (first))\r\n        (_ => bind\r\n            (apply)\r\n            (value => map\r\n                (ignore (then))\r\n                (_ => value)));\r\n\r\nconst any = stream => {\r\n    const { char, stream: stream1 } = stream.advance();\r\n    return char\r\n        ? new Success(char, stream1)\r\n        : new Failure(\"End of file.\", stream1);\r\n}\r\n\r\nconst eof = stream => {\r\n    const result = any (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success(undefined, stream);\r\n    } else {\r\n        return new Failure(\"Expected eof, got: \" + result.value);\r\n    }\r\n}\r\n\r\n const char = predicate =>\r\n    bind\r\n        (any)\r\n        (x => predicate (x) ? \r\n            return_ (x) : \r\n            fail (x + \"does not match predicate.\"));\r\n\r\nconst many = parser => stream => {\r\n    const result = parser (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success([], stream);\r\n    } else {\r\n        if (result.stream === stream) {\r\n            return new Failure(\"Infinite loop detected.\", stream);\r\n        } else {\r\n            return map \r\n                (many (parser))\r\n                (value => [result.value].concat(value))\r\n                (result.stream)\r\n        }\r\n    }\r\n}\r\n\r\n// many1 = (parser >> parser*)\r\n// manySepBy = (opt(parser >> many(',' >> parser)))\r\n// manySepEndBy = (opt(parser >> many(',' >> parser) >> opt(',')))\r\nconst many1 = parser =>\r\n    bind\r\n        (parser)\r\n        (head => map\r\n            (many (parser))\r\n            (tail => [head].concat(tail)));\r\nconst manySepEndBy = parser => separator =>\r\n    bind\r\n        (optional (pipe ([parser, optional(separator)])))\r\n        (value => {\r\n            if (!value) {\r\n                return return_ ([]);\r\n            } else if (!value[1]) {\r\n                return return_([value[0]]);\r\n            } else {\r\n                return map\r\n                    (many(do_ ({ apply: parser, then: [optional(separator)] })))\r\n                    (tail => [value[0]].concat(tail));\r\n            }\r\n        });\r\n\r\nconst many1SepEndBy = parser => separator => \r\n    bind \r\n        (parser)\r\n        (head => stream => {\r\n            const sep = separator (stream);\r\n            if (sep instanceof Failure) {\r\n                return new Success([head], stream);\r\n            } else {\r\n                return map\r\n                    (manySepEndBy (parser) (separator))\r\n                    (value => [head].concat(value))\r\n                    (sep.stream);\r\n            }\r\n        });\r\n\r\n\r\nconst manySepBy = parser => separator => stream => {\r\n    const result = parser (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success([], stream);\r\n    } else {\r\n        const separatorResult = separator (result.stream);\r\n        if (separatorResult instanceof Failure) {\r\n            return new Success([result.value], result.stream);\r\n        } else {\r\n            if (stream === separatorResult.stream) {\r\n                return new Failure(\"Infinite loop detected.\", stream);\r\n            } else {\r\n                return map\r\n                    (many1SepBy (parser) (separator))\r\n                    (tail => [result.value].concat(tail))\r\n                    (separatorResult.stream);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst many1SepBy = parser => separator => stream =>\r\n    bind\r\n        (parser)\r\n        (head => stream_ => {\r\n            const separatorResult = separator (stream_);\r\n            if (separatorResult instanceof Failure) {\r\n                return new Success([head], stream_);\r\n            } else {\r\n                if (stream === separatorResult.stream) {\r\n                    return new Failure(\"Infinite loop detected.\", stream);\r\n                } else {\r\n                    return map\r\n                        (many1SepBy (parser) (separator))\r\n                        (tail => [head].concat(tail))\r\n                        (separatorResult.stream);\r\n                }\r\n            }\r\n        })\r\n        (stream);\r\n\r\nconst integer =\r\n    map\r\n        (many1 (char (c => c >= '0' && c <= '9')))\r\n        (chars => (+(chars.join(\"\"))));\r\n\r\nconst choice = parsers => stream => {\r\n    function choice_(p, e, stream) {\r\n        if (p.length === 0) {\r\n            return new Failure(\"Failed to parse choices: \\n\" + e.join(\"\\n\\t\"));\r\n        } else {\r\n            const [parser, ...tail] = p;\r\n            const result = parser (stream);\r\n            if (result instanceof Success) {\r\n                return result;\r\n            } else {\r\n                return choice_(tail, e.concat([result.message]), stream);\r\n            }\r\n        }\r\n    }\r\n    return choice_(parsers, [], stream);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    return: return_,\r\n    fail: fail,\r\n    bind: bind,\r\n    map: map,\r\n    position: position,\r\n    char: char,\r\n    any: any,\r\n    eof: eof,\r\n    lazy: lazy,\r\n    many: many,\r\n    many1: many1,\r\n    manySepEndBy: manySepEndBy,\r\n    many1SepEndBy: many1SepEndBy,\r\n    manySepBy: manySepBy,\r\n    many1SepBy: many1SepBy,\r\n    integer: integer,\r\n    optional: optional,\r\n    pipe: pipe,\r\n    choice: choice,\r\n    do: do_\r\n}","import CharStream from \"./CharStream\";\r\nimport Parser from \"./Parser\";\r\nimport { Success, Failure } from \"./Result\";\r\n\r\nfunction test() {\r\n    const stream = CharStream.FromString(\"1,2,123 ab\");\r\n    const parser = Parser.manySepEndBy (Parser.integer) (Parser.char (c => c === ','));\r\n    const result = parser (stream);\r\n}\r\n\r\ntest();"],"names":["CharStream","data","cursor","row","column","Object","freeze","char","newStream","stream","string","Result","_","undefined","Success","value","f","Failure","message","position","lazy","return_","x","fail","bind","parser","map","optional","result","pipe","head","tail","h","t","concat","ignore","do_","first","apply","then","any","advance","stream1","eof","predicate","many","many1","manySepEndBy","separator","many1SepEndBy","sep","manySepBy","separatorResult","many1SepBy","stream_","integer","c","chars","join","choice","parsers","choice_","p","e","length","return","do","test","FromString","Parser"],"mappings":"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"}