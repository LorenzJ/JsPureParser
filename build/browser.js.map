{"version":3,"file":"browser.js","sources":["../src/CharStream.js","../src/Result.js","../src/Parser.js","../src/main.js"],"sourcesContent":["export default class CharStream {\r\n    constructor(data, cursor, row, column) {\r\n        this.data = data;\r\n        this.cursor = cursor;\r\n        this.row = row;\r\n        this.column = column;\r\n        Object.freeze(this);\r\n    }\r\n\r\n    advance() {\r\n        const char = this.data[this.cursor];\r\n        const newStream =\r\n            char === '\\n'\r\n            ? new CharStream(this.data, this.cursor + 1, this.row + 1, 1)\r\n            : new CharStream(this.data, this.cursor + 1, this.row, this.column + 1);\r\n        return { char: char, stream: newStream };\r\n    }\r\n\r\n    static FromString(string) {\r\n        return new CharStream(string, 0, 1, 1);\r\n    }\r\n}","export class Result {\r\n    constructor(stream) {\r\n        this.stream = stream;\r\n    }\r\n    map(_) { throw undefined; }\r\n    bind(_) { throw undefined; }\r\n}\r\n\r\nexport class Success extends Result {\r\n    constructor(value, stream) {\r\n        super(stream);\r\n        this.value = value;\r\n        Object.freeze(this);\r\n    }\r\n    map(f) {\r\n        const [value, stream] = f(this.value, this.stream);\r\n        return new Success(value, stream);\r\n    }\r\n    bind(f) {\r\n        return f(this.value, this.stream);\r\n    }\r\n}\r\n\r\nexport class Failure extends Result {\r\n    constructor(message, stream) {\r\n        super(stream);\r\n        this.message = message;\r\n        Object.freeze(this);\r\n    }\r\n    map(_) {\r\n        return this;\r\n    }\r\n    bind(_) {\r\n        return this;\r\n    }\r\n}","import { Success, Failure } from \"./Result\";\r\n\r\nconst position = stream => new Success([stream.row, stream.column], stream);\r\n\r\nconst lazy = f => stream => f () (stream);\r\n\r\nconst return_ = x => stream => new Success(x, stream);\r\n\r\nconst fail = message => stream =>\r\n    new Failure(message, stream);\r\n\r\nconst bind = parser => f => stream => \r\n    parser (stream).bind((value, stream) => f (value) (stream));\r\n\r\nconst map = parser => f =>\r\n    bind (parser)\r\n        (x => return_ (f (x)));\r\n\r\nconst optional = parser => stream => {\r\n    const result = parser (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success(undefined, stream);\r\n    } else {\r\n        return result;\r\n    }\r\n}\r\n\r\nconst string = str => stream => {\r\n    const str_ = ([head, ...tail]) =>\r\n        bind (any)\r\n            (c => stream_ =>\r\n                c === head ?\r\n                    (tail.length === 0 ?\r\n                        return_ (str) (stream_)\r\n                    : str_ (tail) (stream_))\r\n                : fail (\"Got '\" + c + \"' expected '\" + head + \"'\") (stream))\r\n    return str_ (str) (stream);\r\n}\r\n        \r\nconst withDefault = x => parser =>\r\n    map (optional (parser))\r\n        (option => option ? option : x);\r\n\r\nconst pipe = ([head, ...tail]) =>\r\n    head === undefined ?\r\n        return_ ([]) :\r\n        bind (head)\r\n            (h => map (pipe (tail))\r\n                (t => [h].concat(t)));\r\n\r\nconst ignore = ([head, ...tail]) => \r\n    head === undefined ?\r\n        return_ (undefined) :\r\n        bind (head) (_ => ignore (tail));\r\n\r\nconst do_ = ({first = [], apply, then = []}) => \r\n    bind(ignore (first))\r\n        (_ => bind (apply)\r\n            (value => map (ignore (then))\r\n            (_ => value)));\r\n\r\nconst any = stream => {\r\n    const { char, stream: stream1 } = stream.advance();\r\n    return char\r\n        ? new Success(char, stream1)\r\n        : new Failure(\"End of file.\", stream1);\r\n}\r\n\r\nconst eof = stream => {\r\n    const result = any (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success(undefined, stream);\r\n    } else {\r\n        return new Failure(\"Expected eof, got: \" + result.value, stream);\r\n    }\r\n}\r\n\r\n const char = predicate =>\r\n    bind (any)\r\n        (x => predicate (x) ? \r\n            return_ (x) : \r\n            fail (x + \"does not match predicate.\"));\r\n\r\nconst many = parser => stream =>\r\n    bind (optional (parser))\r\n        (head => stream_ =>\r\n            head === undefined ?\r\n                return_ ([]) (stream_) :\r\n            stream === stream_ ?\r\n                fail (\"infinite loop detected.\") (stream) :\r\n                map (many (parser))\r\n                    (tail => [].concat([head], tail))\r\n                    (stream_))\r\n        (stream);\r\n\r\nconst many1 = parser =>\r\n    bind (parser)\r\n        (head => map (many (parser))\r\n            (tail => [head].concat(tail)));\r\n\r\nconst manySepEndBy = parser => separator => stream =>\r\n    bind (optional (parser))\r\n        (head => stream_ => \r\n            head === undefined ? \r\n                return_ ([]) (stream_)\r\n            : stream === stream_ ? \r\n                fail (\"infinite loop detected.\") (stream)\r\n            : bind (optional (separator))\r\n                (sep => sep === undefined\r\n                    ? return_ ([head])\r\n                    : map (manySepEndBy (parser) (separator))\r\n                        (tail => [].concat([head], tail)))\r\n                (stream_))\r\n        (stream);\r\n\r\nconst many1SepEndBy = parser => separator =>\r\n    bind (parser)\r\n        (head => bind (optional (separator))\r\n            (sep =>\r\n                sep === undefined ? \r\n                    return_ ([head])\r\n                : map (manySepEndBy (parser) (separator))\r\n                    (tail => [].concat([head], tail))));\r\n\r\nconst many1SepBy = parser => separator => stream =>\r\n    bind (parser)\r\n        (head => stream_ => \r\n            head === undefined ? \r\n                return_ ([]) (stream_)\r\n            : stream === stream_ ?\r\n                fail (\"infinite loop detected.\") (stream)\r\n            : bind (optional (separator))\r\n                (sep => \r\n                    sep === undefined ? \r\n                        return_ ([head])\r\n                    : map (many1SepBy (parser) (separator))\r\n                        (tail => [].concat([head], tail)))\r\n                (stream_))\r\n        (stream);\r\n\r\nconst manySepBy = parser => separator => \r\n    bind (optional (parser))\r\n        (head => head === undefined\r\n            ? return_ ([])\r\n            : bind (optional (separator))\r\n            (sep =>sep === undefined\r\n                ? return_ ([head])\r\n                : map (many1SepBy (parser) (separator))\r\n                    (tail => [].concat([head], tail))));\r\n\r\nconst integer =\r\n    map\r\n        (many1 (char (c => c >= '0' && c <= '9')))\r\n        (chars => (+(chars.join(\"\"))));\r\n\r\nconst choice = parsers => stream => {\r\n    function choice_(p, e, stream) {\r\n        if (p.length === 0) {\r\n            return new Failure(\"Failed to parse choices: \\n\" + e.join(\"\\n\\t\"));\r\n        } else {\r\n            const [parser, ...tail] = p;\r\n            const result = parser (stream);\r\n            if (result instanceof Success) {\r\n                return result;\r\n            } else {\r\n                return choice_(tail, e.concat([result.message]), stream);\r\n            }\r\n        }\r\n    }\r\n    return choice_(parsers, [], stream);\r\n}\r\n\r\nexport default {\r\n    return: return_,\r\n    fail: fail,\r\n    bind: bind,\r\n    map: map,\r\n    optional: optional,\r\n    withDefault: withDefault,\r\n    position: position,\r\n    char: char,\r\n    string: string,\r\n    any: any,\r\n    eof: eof,\r\n    lazy: lazy,\r\n    many: many,\r\n    many1: many1,\r\n    manySepEndBy: manySepEndBy,\r\n    many1SepEndBy: many1SepEndBy,\r\n    manySepBy: manySepBy,\r\n    many1SepBy: many1SepBy,\r\n    integer: integer,\r\n    pipe: pipe,\r\n    choice: choice,\r\n    do: do_\r\n}","import CharStream from \"./CharStream\";\r\nimport Parser from \"./Parser\";\r\nimport { Success, Failure } from \"./Result\";\r\n\r\nfunction test() {\r\n    const parser = Parser.string (\"H\");\r\n    const result = parser (CharStream.FromString(\"H\"));\r\n}\r\n\r\ntest();"],"names":["CharStream","data","cursor","row","column","Object","freeze","char","newStream","stream","string","Result","_","undefined","Success","value","f","Failure","message","position","lazy","return_","x","fail","bind","parser","map","optional","result","str","str_","head","tail","any","c","stream_","length","withDefault","option","pipe","h","t","concat","ignore","do_","first","apply","then","advance","stream1","eof","predicate","many","many1","manySepEndBy","separator","sep","many1SepEndBy","many1SepBy","manySepBy","integer","chars","join","choice","parsers","choice_","p","e","return","do","test","Parser","FromString"],"mappings":"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"}