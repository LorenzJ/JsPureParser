{"version":3,"file":"main.js","sources":["../src/CharStream.js","../src/Result.js","../src/Parser.js","../src/main.js"],"sourcesContent":["export default class CharStream {\r\n    constructor(data, cursor, row, column) {\r\n        this.data = data;\r\n        this.cursor = cursor;\r\n        this.row = row;\r\n        this.column = column;\r\n        Object.freeze(this);\r\n    }\r\n\r\n    advance() {\r\n        const char = this.data[this.cursor];\r\n        const newStream =\r\n            char === '\\n'\r\n            ? new CharStream(this.data, this.cursor + 1, this.row + 1, 1)\r\n            : new CharStream(this.data, this.cursor + 1, this.row, this.column + 1);\r\n        return { char: char, stream: newStream };\r\n    }\r\n\r\n    static FromString(string) {\r\n        return new CharStream(string, 0, 1, 1);\r\n    }\r\n}","export class Result {\r\n    constructor(stream) {\r\n        this.stream = stream;\r\n    }\r\n    map(_) { throw undefined; }\r\n    bind(_) { throw undefined; }\r\n}\r\n\r\nexport class Success extends Result {\r\n    constructor(value, stream) {\r\n        super(stream);\r\n        this.value = value;\r\n        Object.freeze(this);\r\n    }\r\n    map(f) {\r\n        const [value, stream] = f(this.value, this.stream);\r\n        return new Success(value, stream);\r\n    }\r\n    bind(f) {\r\n        return f(this.value, this.stream);\r\n    }\r\n}\r\n\r\nexport class Failure extends Result {\r\n    constructor(message, stream) {\r\n        super(stream);\r\n        this.message = message;\r\n        Object.freeze(this);\r\n    }\r\n    map(_) {\r\n        return this;\r\n    }\r\n    bind(_) {\r\n        return this;\r\n    }\r\n}","import { Success, Failure } from \"./Result\";\r\n\r\nconst position = stream => new Success([stream.row, stream.column], stream);\r\n\r\nconst lazy = f => stream => f () (stream);\r\n\r\nconst return_ = x => stream => new Success(x, stream);\r\n\r\nconst fail = message => stream =>\r\n    new Failure(message, stream);\r\n\r\nconst bind = parser => f => stream => \r\n    parser (stream).bind((value, stream) => f (value) (stream));\r\n\r\nconst map = parser => f =>\r\n    bind (parser)\r\n        (x => return_ (f (x)));\r\n\r\nconst optional = parser => stream => {\r\n    const result = parser (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success(undefined, stream);\r\n    } else {\r\n        return result;\r\n    }\r\n}\r\n\r\nconst pipe = ([head, ...tail]) =>\r\n    head === undefined ?\r\n        return_ ([]) :\r\n        bind\r\n            (head)\r\n            (h => map\r\n                (pipe (tail))\r\n                (t => [h].concat(t)));\r\n\r\nconst ignore = ([head, ...tail]) => \r\n    head === undefined ?\r\n        return_ (undefined) :\r\n        bind (head) (_ => ignore (tail));\r\n\r\nconst do_ = ({first = [], apply, then = []}) => \r\n    bind\r\n        (ignore (first))\r\n        (_ => bind\r\n            (apply)\r\n            (value => map\r\n                (ignore (then))\r\n                (_ => value)));\r\n\r\nconst any = stream => {\r\n    const { char, stream: stream1 } = stream.advance();\r\n    return char\r\n        ? new Success(char, stream1)\r\n        : new Failure(\"End of file.\", stream1);\r\n}\r\n\r\nconst eof = stream => {\r\n    const result = any (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success(undefined, stream);\r\n    } else {\r\n        return new Failure(\"Expected eof, got: \" + result.value);\r\n    }\r\n}\r\n\r\n const char = predicate =>\r\n    bind\r\n        (any)\r\n        (x => predicate (x) ? \r\n            return_ (x) : \r\n            fail (x + \"does not match predicate.\"));\r\n\r\nconst many = parser => stream => {\r\n    const result = parser (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success([], stream);\r\n    } else {\r\n        if (result.stream === stream) {\r\n            return new Failure(\"Infinite loop detected.\", stream);\r\n        } else {\r\n            return map \r\n                (many (parser))\r\n                (value => [result.value].concat(value))\r\n                (result.stream)\r\n        }\r\n    }\r\n}\r\n\r\n// many1 = (parser >> parser*)\r\n// manySepBy = (opt(parser >> many(',' >> parser)))\r\n// manySepEndBy = (opt(parser >> many(',' >> parser) >> opt(',')))\r\nconst many1 = parser =>\r\n    bind\r\n        (parser)\r\n        (head => map\r\n            (many (parser))\r\n            (tail => [head].concat(tail)));\r\nconst manySepEndBy = parser => separator =>\r\n    bind\r\n        (optional (pipe ([parser, optional(separator)])))\r\n        (value => {\r\n            if (!value) {\r\n                return return_ ([]);\r\n            } else if (!value[1]) {\r\n                return return_([value[0]]);\r\n            } else {\r\n                return map\r\n                    (many(do_ ({ apply: parser, then: [optional(separator)] })))\r\n                    (tail => [value[0]].concat(tail));\r\n            }\r\n        });\r\n\r\nconst many1SepEndBy = parser => separator => \r\n    bind \r\n        (parser)\r\n        (head => stream => {\r\n            const sep = separator (stream);\r\n            if (sep instanceof Failure) {\r\n                return new Success([head], stream);\r\n            } else {\r\n                return map\r\n                    (manySepEndBy (parser) (separator))\r\n                    (value => [head].concat(value))\r\n                    (sep.stream);\r\n            }\r\n        });\r\n\r\n\r\nconst manySepBy = parser => separator => stream => {\r\n    const result = parser (stream);\r\n    if (result instanceof Failure) {\r\n        return new Success([], stream);\r\n    } else {\r\n        const separatorResult = separator (result.stream);\r\n        if (separatorResult instanceof Failure) {\r\n            return new Success([result.value], result.stream);\r\n        } else {\r\n            if (stream === separatorResult.stream) {\r\n                return new Failure(\"Infinite loop detected.\", stream);\r\n            } else {\r\n                return map\r\n                    (many1SepBy (parser) (separator))\r\n                    (tail => [result.value].concat(tail))\r\n                    (separatorResult.stream);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst many1SepBy = parser => separator => stream =>\r\n    bind\r\n        (parser)\r\n        (head => stream_ => {\r\n            const separatorResult = separator (stream_);\r\n            if (separatorResult instanceof Failure) {\r\n                return new Success([head], stream_);\r\n            } else {\r\n                if (stream === separatorResult.stream) {\r\n                    return new Failure(\"Infinite loop detected.\", stream);\r\n                } else {\r\n                    return map\r\n                        (many1SepBy (parser) (separator))\r\n                        (tail => [head].concat(tail))\r\n                        (separatorResult.stream);\r\n                }\r\n            }\r\n        })\r\n        (stream);\r\n\r\nconst integer =\r\n    map\r\n        (many1 (char (c => c >= '0' && c <= '9')))\r\n        (chars => (+(chars.join(\"\"))));\r\n\r\nconst choice = parsers => stream => {\r\n    function choice_(p, e, stream) {\r\n        if (p.length === 0) {\r\n            return new Failure(\"Failed to parse choices: \\n\" + e.join(\"\\n\\t\"));\r\n        } else {\r\n            const [parser, ...tail] = p;\r\n            const result = parser (stream);\r\n            if (result instanceof Success) {\r\n                return result;\r\n            } else {\r\n                return choice_(tail, e.concat([result.message]), stream);\r\n            }\r\n        }\r\n    }\r\n    return choice_(parsers, [], stream);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    return: return_,\r\n    fail: fail,\r\n    bind: bind,\r\n    map: map,\r\n    position: position,\r\n    char: char,\r\n    any: any,\r\n    eof: eof,\r\n    lazy: lazy,\r\n    many: many,\r\n    many1: many1,\r\n    manySepEndBy: manySepEndBy,\r\n    many1SepEndBy: many1SepEndBy,\r\n    manySepBy: manySepBy,\r\n    many1SepBy: many1SepBy,\r\n    integer: integer,\r\n    optional: optional,\r\n    pipe: pipe,\r\n    choice: choice,\r\n    do: do_\r\n}","import CharStream from \"./CharStream\";\r\nimport Parser from \"./Parser\";\r\nimport { Success, Failure } from \"./Result\";\r\n\r\nfunction test() {\r\n    const stream = CharStream.FromString(\"1,2,123 ab\");\r\n    const parser = Parser.manySepEndBy (Parser.integer) (Parser.char (c => c === ','));\r\n    const result = parser (stream);\r\n}\r\n\r\ntest();"],"names":[],"mappings":"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"}